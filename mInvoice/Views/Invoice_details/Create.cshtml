@model mInvoice.Models.Invoice_details

@{
    ViewBag.Title = @Resources.Resource.create_new;
}

<h2>@Resources.Resource.create_new</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@Resources.Resource.positions</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.article_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("article_id", null,
                    htmlAttributes: new { @class = "form-control", @id = "article_id", @onchange = "getPrice(false)" },
                    optionLabel: @Resources.Resource.select_Item)
                @Html.ValidationMessageFor(model => model.article_id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.tax_rate_id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("tax_rate_id", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.tax_rate_id, "", new { @class = "text-danger" })
                <button type="button" id="details" value="" onclick="getPrice(true);" class="btn btn-default" style="margin-top:0.5em;">@Resources.Resource.get_tax_rate</button>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantity_2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantity_2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quantity_2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.quantity_3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.quantity_3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.quantity_3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price_netto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price_netto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price_netto, "", new { @class = "text-danger" })
                <button type="button" id="details" value="" onclick="getPrice(true);" class="btn btn-default" style="margin-top:0.5em;">@Resources.Resource.get_prices</button>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.discount, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UpdatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UpdatedAt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UpdatedAt, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink(@Resources.Resource.back_to_list, "Index", new { id = Session["invoice_header_id"], @class="btn btn-default" })
</div>




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script>
    function getPrice(is_edit) {
        var _article_id = $('#article_id').val();
        var _price_netto = $('#price_netto').val();

        if (is_edit ||
            _price_netto === "" && typeof _price_netto === "string") {

                $.ajax({
                    url: '/Invoice_details/getPrice',
                    type: "GET",
                    dataType: "JSON",
                    data: { article_id: _article_id },
                    success: function (ret_value) {
                        $("#price_netto").val(ret_value);
                    },
                    error: function (xhr, err) {
                        alert("readyState: " + xhr.readyState + "\nstatus: " + xhr.status);
                        alert("responseText: " + xhr.responseText);                   
                    }
                });

                $.ajax({
                    url: '/Invoice_details/getTax_rate_id',
                    type: "GET",
                    dataType: "JSON",
                    data: { article_id: _article_id },
                    success: function (ret_value) {
                        $("#price_netto").val(ret_value);
                    },
                    error: function (xhr, err) {
                        alert("readyState: " + xhr.readyState + "\nstatus: " + xhr.status);
                        alert("responseText: " + xhr.responseText);
                    }
                });
        }
    }

    function getTaxRate(is_edit) {
        var _article_id = $('#article_id').val();
        var _tax_rate = $('#tax_rate').val();

        if (is_edit ||
            _price_netto === "" && typeof _price_netto === "string") {

            $.ajax({
                url: '/Invoice_details/getTax_rate_id',
                type: "GET",
                dataType: "JSON",
                data: { article_id: _article_id },
                success: function (ret_value) {
                    $("#price_netto").val(ret_value);
                },
                error: function (xhr, err) {
                    alert("readyState: " + xhr.readyState + "\nstatus: " + xhr.status);
                    alert("responseText: " + xhr.responseText);
                }
            });
        }
    }
</script>